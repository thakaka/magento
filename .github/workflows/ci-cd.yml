name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mariadb:10.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: magento2
          MYSQL_DATABASE: magento2
          MYSQL_USER: magento2
          MYSQL_PASSWORD: magento2
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5

      redis:
        image: redis:6.2
        ports:
          - 6379:6379

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
        ports:
          - 9200:9200
        env:
          discovery.type: single-node

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: myapp:${{ github.sha }}

    - name: Run Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d

    - name: Wait for services to be ready
      run: |
        docker-compose -f docker-compose.yml exec -T fpm wait-for-it db:3306 --timeout=60 -- echo "MySQL is up"

    - name: Run Magento setup commands
      run: |
        docker-compose -f docker-compose.yml exec -T fpm bin/magento setup:install \
          --base-url=http://localhost \
          --db-host=db \
          --db-name=magento2 \
          --db-user=magento2 \
          --db-password=magento2 \
          --admin-firstname=Admin \
          --admin-lastname=User \
          --admin-email=admin@example.com \
          --admin-user=admin \
          --admin-password=admin123 \
          --language=en_US \
          --currency=USD \
          --timezone=America/Chicago \
          --use-rewrites=1

        docker-compose -f docker-compose.yml exec -T fpm bin/magento setup:di:compile
        docker-compose -f docker-compose.yml exec -T fpm bin/magento setup:static-content:deploy -f
        docker-compose -f docker-compose.yml exec -T fpm bin/magento run:tests

    - name: Shut down Docker Compose
      run: |
        docker-compose -f docker-compose.yml down
